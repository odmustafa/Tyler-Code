{"ast":null,"code":"var _jsxFileName = \"/Users/omar/Documents/augment-projects/Tyler-Code/src/components/LoadingSpinner.js\";\nimport React from 'react';\nimport './LoadingSpinner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoadingSpinner = ({\n  size = 'medium',\n  color = '#3b82f6'\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `loading-spinner ${size}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      style: {\n        borderTopColor: color\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = LoadingSpinner;\nexport default LoadingSpinner;\nvar _c;\n$RefreshReg$(_c, \"LoadingSpinner\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LoadingSpinner","size","color","className","children","style","borderTopColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/omar/Documents/augment-projects/Tyler-Code/src/components/LoadingSpinner.js"],"sourcesContent":["import React from 'react';\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = ({ size = 'medium', color = '#3b82f6' }) => {\n  return (\n    <div className={`loading-spinner ${size}`}>\n      <div \n        className=\"spinner\" \n        style={{ borderTopColor: color }}\n      ></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI,GAAG,QAAQ;EAAEC,KAAK,GAAG;AAAU,CAAC,KAAK;EACjE,oBACEH,OAAA;IAAKI,SAAS,EAAE,mBAAmBF,IAAI,EAAG;IAAAG,QAAA,eACxCL,OAAA;MACEI,SAAS,EAAC,SAAS;MACnBE,KAAK,EAAE;QAAEC,cAAc,EAAEJ;MAAM;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACC,EAAA,GATIX,cAAc;AAWpB,eAAeA,cAAc;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}